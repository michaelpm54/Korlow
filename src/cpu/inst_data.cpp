#include <cinttypes>
#include "inst_data.h"
#include "cpu_instructions.h"

const int kInstSizes[0x100] =
{
/*      0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F */
/* 0 */ 1, 3, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1,
/* 1 */ 2, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
/* 2 */ 2, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
/* 3 */ 2, 3, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1,
/* 4 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 5 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 6 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 7 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 8 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 9 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* A */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* B */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* C */ 1, 1, 3, 3, 3, 1, 2, 1, 1, 1, 3, 1, 3, 3, 2, 1,
/* D */ 1, 1, 3, 0, 3, 1, 2, 1, 1, 1, 3, 0, 3, 0, 2, 1,
/* E */ 2, 1, 1, 0, 0, 1, 2, 1, 2, 1, 3, 0, 0, 0, 2, 1,
/* F */ 2, 1, 1, 1, 0, 1, 2, 1, 2, 1, 3, 1, 0, 0, 2, 1,
};

const int kInstCycles[0x100] =
{
/*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F */
/* 0 */ 4,  12, 8,  8,  4,  4,  8,  4,  20, 8,  8,  8,  4,  4,  8,  4,
/* 1 */ 4,  12, 8,  8,  4,  4,  8,  4,  12, 8,  8,  8,  4,  4,  8,  4,
/* 2 */ 12, 12, 8,  8,  4,  4,  8,  4,  12, 8,  8,  8,  4,  4,  8,  4,
/* 3 */ 12, 12, 8,  8,  12, 12, 12, 4,  12, 8,  8,  8,  4,  4,  8,  4,
/* 4 */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* 5 */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* 6 */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* 7 */ 8,  8,  8,  8,  8,  8,  4,  8,  4,  4,  4,  4,  4,  4,  8,  4,
/* 8 */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* 9 */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* A */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* B */ 4,  4,  4,  4,  4,  4,  8,  4,  4,  4,  4,  4,  4,  4,  8,  4,
/* C */ 20, 12, 16, 16, 24, 16, 8,  16, 20, 16, 16, 4,  24, 24, 8,  16,
/* D */ 20, 12, 16, 0,  24, 16, 8,  16, 20, 16, 16, 0,  24, 0,  8,  16,
/* E */ 12, 12, 8,  0,  0,  16, 8,  16, 16, 4,  16, 0,  0,  0,  8,  16,
/* F */ 12, 12, 8,  4,  0,  16, 8,  16, 12, 8,  16, 4,  0,  0,  8,  16,
};

const int kInstCyclesAlt[0x100] =
{
/*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F */
/* 0 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 1 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 2 */ 8,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  0,
/* 3 */ 8,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  0,
/* 4 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 5 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 6 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 7 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 8 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* 9 */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* A */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* B */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* C */ 8,  0,  12, 0,  12, 0,  0,  0,  8,  0, 12,  0,  12, 24, 0,  0,
/* D */ 8,  0,  12, 0,  12, 0,  0,  0,  8,  0, 12,  0,  12, 0,  0,  0,
/* E */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
/* F */ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
};

const int kCbInstSizes[0x100] =
{
/*      0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F */
/* 0 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 1 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 2 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 3 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 4 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 5 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 6 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 7 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 8 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* 9 */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* A */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* B */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* C */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* D */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* E */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
/* F */ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
};

const int kCbInstCycles[0x100] =
{
/*      0  1  2  3  4  5  6   7  8  9  A  B  C  D  E   F */
/* 0 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* 1 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* 2 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* 3 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* 4 */ 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8,
/* 5 */ 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8,
/* 6 */ 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8,
/* 7 */ 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8,
/* 8 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* 9 */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* A */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* B */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* C */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* D */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* E */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
/* F */ 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
};

const char * const kInstFmts[0x100] =
{    
/*      0                   1              2              3             4                5             6                7             8                      9             A               B           C               D            E              F */
/* 0 */ "NOP",              "LD BC, %04X", "LD (BC), A",  "INC BC",     "INC B",         "DEC B",      "LD B, %02X",    "RLCA",       "LD (%04X), SP",       "ADD HL, BC", "LD A, (BC)",   "DEC BC",   "INC C",        "DEC C",     "LD C, %02X",  "RRCA",
/* 1 */ "STOP",             "LD DE, %04X", "LD (DE), A",  "INC DE",     "INC D",         "DEC D",      "LD D, %02X",    "RLA",        "JR %02" PRIX8,        "ADD HL, DE", "LD A, (DE)",   "DEC DE",   "INC E",        "DEC E",     "LD E, %02X",  "RRA",
/* 2 */ "JR NZ, %02" PRIX8, "LD HL, %04X", "LD (HL+), A", "INC HL",     "INC H",         "DEC H",      "LD H, %02X",    "DAA",        "JR Z, %02" PRIX8,     "ADD HL, HL", "LD A, (HL+)",  "DEC HL",   "INC L",        "DEC L",     "LD L, %02X",  "CPL",
/* 3 */ "JR NC, %02" PRIX8, "LD SP, %04X", "LD (HL-), A", "INC SP",     "INC (HL)",      "DEC (HL)",   "LD (HL), %02X", "SCF",        "JR C, %02" PRIX8,     "ADD HL, SP", "LD A, (HL-)",  "DEC SP",   "INC A",        "DEC A",     "LD A, %02X",  "CCF",
/* 4 */ "LD B, B",          "LD B, C",     "LD B, D",     "LD B, E",    "LD B, H",       "LD B, L",    "LD B, (HL)",    "LD B, A",    "LD C, B",             "LD C, C",    "LD C, D",      "LD C, E",  "LD C, H",      "LD C, L",   "LD C, (HL)",  "LD C, A",
/* 5 */ "LD D, B",          "LD D, C",     "LD D, D",     "LD D, E",    "LD D, H",       "LD D, L",    "LD D, (HL)",    "LD D, A",    "LD E, B",             "LD E, C",    "LD E, D",      "LD E, E",  "LD E, H",      "LD E, L",   "LD E, (HL)",  "LD E, A",
/* 6 */ "LD H, B",          "LD H, C",     "LD H, D",     "LD H, E",    "LD H, H",       "LD H, L",    "LD H, (HL)",    "LD H, A",    "LD L, B",             "LD L, C",    "LD L, D",      "LD L, E",  "LD L, H",      "LD L, L",   "LD L, (HL)",  "LD L, A",
/* 7 */ "LD (HL), B",       "LD (HL), C",  "LD (HL), D",  "LD (HL), E", "LD (HL), H",    "LD (HL), L", "HALT",          "LD (HL), A", "LD A, B",             "LD A, C",    "LD A, D",      "LD A, E",  "LD A, H",      "LD A, L",   "LD A, (HL)",  "LD A, A",
/* 8 */ "ADD A, B",         "ADD A, C",    "ADD A, D",    "ADD A, E",   "ADD A, H",      "ADD A, L",   "ADD A, (HL)",   "ADD A, A",   "ADC A, B",            "ADC A, C",   "ADC A, D",     "ADC A, E", "ADC A, H",     "ADC A, L",  "ADC A, (HL)", "ADC A, A",
/* 9 */ "SUB A, B",         "SUB A, C",    "SUB A, D",    "SUB A, E",   "SUB A, H",      "SUB A, L",   "SUB A, (HL)",   "SUB A, A",   "SBC A, B",            "SBC A, C",   "SBC A, D",     "SBC A, E", "SBC A, H",     "SBC A, L",  "SBC A, (HL)", "SBC A, A",
/* A */ "AND A, B",         "AND A, C",    "AND A, D",    "AND A, E",   "AND A, H",      "AND A, L",   "AND A, (HL)",   "AND A, A",   "XOR A, B",            "XOR A, C",   "XOR A, D",     "XOR A, E", "XOR A, H",     "XOR A, L",  "XOR A, (HL)", "XOR A, A",
/* B */ "OR A, B",          "OR A, C",     "OR A, D",     "OR A, E",    "OR A, H",       "OR A, L",    "OR A, (HL)",    "OR A, A",    "CP A, B",             "CP A, C",    "CP A, D",      "CP A, E",  "CP A, H",      "CP A, L",   "CP A, (HL)",  "CP A, A",
/* C */ "RET NZ",           "POP BC",      "JP NZ, %04X", "JP %04X",    "CALL NZ, %04X", "PUSH BC",    "ADD A, %02X",   "RST 00",     "RET Z",               "RET",        "JP Z, %04X",   "CB",       "CALL Z, %04X", "CALL %04X", "ADC A, %02X", "RST 10",
/* D */ "RET_NC",           "POP DE",      "JP NC, %04X", "INVALID",    "CALL NC, %04X", "PUSH DE",    "SUB A, %02X",   "RST 10",     "RET C",               "RETI",       "JP C, %04X",   "INVALID",  "CALL C, %04X", "INVALID",   "SBC A, %02X", "RST 18",
/* E */ "LD (FF%02X), A",   "POP HL",      "LD (C), A",   "INVALID",    "INVALID",       "PUSH HL",    "AND A, %02X",   "RST 20",     "ADD SP, %02" PRIX8,   "JP (HL)",   "LD (%04X), A",  "INVALID",  "INVALID",      "INVALID",   "XOR A, %02X", "RST 28",
/* F */ "LD A, (FF%02X)",   "POP AF",      "LD A, (C)",   "DI",         "INVALID",       "PUSH AF",    "OR A, %02X",    "RST 30",     "LD HL, SP+%02" PRIX8, "LD SP, HL",  "LD A, (%04X)", "EI",       "INVALID",      "INVALID",   "CP A, %02X",  "RST 38",
};      

const int kInstFmtSizes[0x100] =
{
/*      0  1   2   3   4   5  6  7  8   9  A   B  C   D   E  F */
/* 0 */ 0, 16, 0,  0,  0,  0, 8, 0, 16, 0, 0,  0, 0,  0,  8, 0,
/* 1 */ 0, 16, 0,  0,  0,  0, 8, 0, 8,  0, 0,  0, 0,  0,  8, 0,
/* 2 */ 8, 16, 0,  0,  0,  0, 8, 0, 8,  0, 0,  0, 0,  0,  8, 0,
/* 3 */ 8, 16, 0,  0,  0,  0, 8, 0, 8,  0, 0,  0, 0,  0,  8, 0,
/* 4 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* 5 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* 6 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* 7 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* 8 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* 9 */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* A */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* B */ 0, 0,  0,  0,  0,  0, 0, 0, 0,  0, 0,  0, 0,  0,  0, 0,
/* C */ 0, 0,  16, 16, 16, 8, 8, 0, 0,  0, 16, 0, 16, 16, 8, 0,
/* D */ 0, 0,  16, 0,  16, 0, 8, 0, 0,  0, 16, 0, 16, 0,  8, 0,
/* E */ 8, 0,  0,  0,  0,  0, 8, 0, 8,  0, 16, 0, 0,  0,  8, 0,
/* F */ 8, 0,  0,  0,  0,  0, 8, 0, 8,  0, 16, 0, 0,  0,  8, 0,
};

const char * const kCbInstFmts[0x100] =
{
/*      0         1         2         3         4         5         6            7         8        9        A        B        C        D        E           F       */
/* 0 */ "RLC B",  "RLC C",  "RLC D",  "RLC E",  "RLC H",  "RLC L",  "RLC (HL)",  "RLC A",  "RRC B", "RRC C", "RRC D", "RRC E", "RRC H", "RRC L", "RRC (HL)", "RRC A",
/* 1 */ "RL B",   "RL C",   "RL D",   "RL E",   "RL H",   "RL L",   "RL (HL)",   "RL A",   "RR B",  "RR C",  "RR D",  "RR E",  "RR H",  "RR L",  "RR (HL)",  "RR A",
/* 2 */ "SLA B",  "SLA C",  "SLA D",  "SLA E",  "SLA H",  "SLA L",  "SLA (HL)",  "SLA A",  "SRA B", "SRA C", "SRA D", "SRA E", "SRA H", "SRA L", "SRA (HL)", "SRA A",
/* 3 */ "SWAP B", "SWAP C", "SWAP D", "SWAP E", "SWAP H", "SWAP L", "SWAP (HL)", "SWAP A", "SRL B", "SRL C", "SRL D", "SRL E", "SRL H", "SRL L", "SRL (HL)", "SRL A",
/* 4 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* 5 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* 6 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* 7 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "BIT 7H", "", "BIT 7, (HL)", "",
/* 8 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* 9 */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* A */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* B */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "RES 7, (HL)", "",
/* C */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* D */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* E */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "",
/* F */ "",       "",       "",       "",       "",       "",       "",          "",       "",      "",     "",     "",     "",       "", "", "SET 7, A",
};

const int kCbInstFmtSizes[0x100] =
{
/*      0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F */
/* 0 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 1 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 2 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 3 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 4 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 5 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 6 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 7 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 8 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* 9 */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* A */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* B */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* C */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* D */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* E */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/* F */ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};
